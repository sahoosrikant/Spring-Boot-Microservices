<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c325ac12-a9ba-4e92-a9b1-7f6e9974fcd6" name="Changes" comment="Needed to check the authentication in eureka server">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/apigateway/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventoryservice/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventoryservice/src/main/resources/data.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notificationservice/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notificationservice/src/main/java/com/microservice/NotificationService/OrderPlacedEvent.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notificationservice/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/client/InventoryClient.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/client/WebClientConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/event/OrderPlacedEvent.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orderservice/src/main/resources/application-docker.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orderservice/src/main/resources/data.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/productservice/src/main/resources/application-docker.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apigateway/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apigateway/src/main/java/com/microservice/ApiGatewayApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/src/main/java/com/microservice/ApiGatewayApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apigateway/src/main/java/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/src/main/java/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apigateway/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discoveryservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/discoveryservice/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discoveryservice/src/main/java/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/discoveryservice/src/main/java/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discoveryservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/discoveryservice/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventoryservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/inventoryservice/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/InventoryServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/InventoryServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/controller/InventoryController.java" beforeDir="false" afterPath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/controller/InventoryController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/repository/InventoryRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/repository/InventoryRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/service/InventoryService.java" beforeDir="false" afterPath="$PROJECT_DIR$/inventoryservice/src/main/java/com/microservice/InventoryService/service/InventoryService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventoryservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/inventoryservice/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/OrderServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/OrderServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/config/WebClientConfig.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/controller/OrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/controller/OrderController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/dto/OrderLineItemsDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/dto/OrderLineItemsDto.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/dto/OrderRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/dto/OrderRequest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/model/InventoryResponse.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/model/Inventory.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/model/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/model/Order.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/model/OrderLineItems.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/model/OrderLineItems.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/service/OrderService.java" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/java/com/microservice/OrderService/service/OrderService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/orderservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/orderservice/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/productservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/productservice/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/productservice/src/main/java/com/microservice/ProductService/ProductServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/productservice/src/main/java/com/microservice/ProductService/ProductServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/productservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/productservice/src/main/resources/application.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2lTUilpWbUvRXIGUI2ZZfDAHCFV" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "jdk.selected.JAVA_MODULE": "corretto-17",
    "last_opened_file_path": "D:/Inetellij_Project/Spring-Boot-Microservices",
    "onboarding.tips.debug.path": "D:/Inetellij_Project/Spring-Boot-Microservices/prometheus/src/main/java/org/example/Main.java",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "MavenSettings"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Inetellij_Project\Spring-Boot-Microservices" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean" />
      <command value="mvn clean compile jib:build" />
      <command value="mvn clean compile jib:build -Djib.tag=1.0" />
      <command value="mvn clean compile jib:build -Djib.tag=1.1" />
      <command value="mvn clean compile jib:build -Djib.tag=1.2" />
      <command value="mvn clean compile jib:build -Djib.tag=1.3" />
      <command value="mvn clean compile jib:build -Djib.tag=1.4" />
      <command value="mvn clean compile jib:build -Djib.tag=1.5" />
      <command value="mvn clean compile jib:build -Djib.tag=1.6" />
      <command value="mvn clean compile jib:build -Djib.tag=1.7" />
    </option>
  </component>
  <component name="RunManager" selected="Application.InventoryServiceApplication">
    <configuration name="ApiGatewayApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.microservice.ApiGatewayApplication" />
      <module name="apigateway" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServerApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.microservice.DiscoveryServerApplication" />
      <module name="discoveryservice" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.microservice.InventoryService.InventoryServiceApplication" />
      <module name="inventoryservice" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservice.InventoryService.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.microservice.NotificationService.NotificationServiceApplication" />
      <module name="notificationservice" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservice.NotificationService.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.microservice.OrderService.OrderServiceApplication" />
      <module name="orderservice" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservice.OrderService.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.NotificationServiceApplication (1)" />
        <item itemvalue="Application.OrderServiceApplication" />
        <item itemvalue="Application.InventoryServiceApplication" />
        <item itemvalue="Application.ApiGatewayApplication" />
        <item itemvalue="Application.DiscoveryServerApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c325ac12-a9ba-4e92-a9b1-7f6e9974fcd6" name="Changes" comment="Needed to check the authentication in eureka server" />
      <created>1725203688672</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1725203688672</updated>
    </task>
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Needed to check the authentication in eureka server" />
    <option name="LAST_COMMIT_MESSAGE" value="Needed to check the authentication in eureka server" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/untitled/src/main/java/org/example/Main.java</url>
          <line>15</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/prometheus/src/main/java/org/example/Main.java</url>
          <line>15</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>